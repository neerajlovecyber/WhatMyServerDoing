name: Go

on:
  push:
    branches: [ "main" ]
    paths:
      - 'go/**'
  pull_request:
    branches: [ "main" ]
    paths:
      - 'go/**'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest,  windows-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5


      - name: Build
        run: |
          cd go
          mkdir -p build
          go build -mod=readonly -o build/whatsmyderverdoing-connector main.go

      - name: Archive build artifacts
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: whatsmyderverdoing-connector-${{ matrix.os }}
          path: build

  release:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: whatsmyderverdoing-connector-${{ matrix.os }}
          path: build

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: latest
          release_name: Release
          draft: false
          prerelease: false

      - name: Upload Release Asset (Linux)
        if: matrix.os == 'ubuntu-latest'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: build/whatsmyderverdoing-connector
          asset_name: whatsmyderverdoing-connector-linux
          asset_content_type: application/octet-stream



      - name: Upload Release Asset (Windows)
        if: matrix.os == 'windows-latest'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: build/whatsmyderverdoing-connector.exe
          asset_name: whatsmyderverdoing-connector-windows.exe
          asset_content_type: application/octet-stream
